{"version":3,"sources":["Component/PostForm.js","redux/actions.js","Component/Post.js","Component/Posts.js","App.js","redux/postReducer.js","index.js","redux/types.js"],"names":["PostForm","props","submitHandler","event","preventDefault","title","state","trim","newPost","id","Date","now","toString","check","ADD","setState","onValueChange","persist","prev","target","name","value","bind","onSubmit","this","className","type","onChange","Component","mapDispatchToProps","text","connect","Post","clickHandler","DEL","post","changeHandler","checked","COMP","console","log","style","textDecoration","onClick","posts","myPosts","map","key","App","click","initialState","store","createStore","action","concat","filter","window","__REDUX_DEVTOOLS_EXTENSION__","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9627f609.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { ADD } from '../redux/actions'\r\n\r\nclass PostForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            title: ''\r\n        }\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n    }\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault()\r\n        const { title } = this.state\r\n        if (!title.trim()) {\r\n            return\r\n        }\r\n        const newPost = {\r\n            title, id: Date.now().toString(), check: false\r\n        }\r\n        this.props.ADD(newPost)\r\n        this.setState({ title: '' })\r\n\r\n    }\r\n    onValueChange = event => {\r\n        event.persist()\r\n        this.setState(prev => ({\r\n            ...prev, ...{ [event.target.name]: event.target.value }\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.submitHandler}>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"title\"\r\n                        name=\"title\"\r\n                        value={this.state.title}\r\n                        onChange={this.onValueChange}\r\n                    />\r\n                </div>\r\n                <button className=\"btn btn-success\" type=\"submit\">Создать</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ADD\r\n}\r\nexport default connect(null, mapDispatchToProps)(PostForm);","export const ADD = (text) => {\r\n    return { type: 'ADD_TODO', text }\r\n}\r\nexport const DEL = (id) => {\r\n    return { type: 'DELETE_TODO', id }\r\n}\r\nexport function COMP(id, check) {\r\n    return {\r\n        type: 'COMPLETE_TODO',\r\n        id,\r\n        check\r\n    };\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { DEL, COMP } from '../redux/actions';\r\n\r\nclass Post extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.clickHandler = this.clickHandler.bind(this)\r\n        this.changeHandler = this.changeHandler.bind(this)\r\n    }\r\n    clickHandler = (event) => {\r\n        this.props.DEL(this.props.post.id)\r\n    }\r\n    changeHandler = (event) => {\r\n        const check = event.target.checked\r\n        this.props.COMP(this.props.post.id, check)\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.post.check)\r\n        return (\r\n            <div className=\"container mb-3\">\r\n                <div className=\"card d-flex align-self-center\">\r\n                    <div className=\"card-body d-flex justify-content-between\">\r\n                        <h5 className=\"card-title d-flex align-self-center m-0 \"\r\n                            style={{\r\n                                textDecoration: this.props.post.check ? 'line-through' : 'none'\r\n                            }}>\r\n                            {this.props.post.title}</h5>\r\n                        <div className=\"btn-group\">\r\n                            <div className=\"form-check d-flex align-self-center mr-2\">\r\n                                <input type=\"checkbox\"\r\n                                    id={this.props.post.id}\r\n                                    onChange={this.changeHandler}\r\n                                    className=\"form-check-input position-static\"></input>\r\n                            </div>\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={this.clickHandler}\r\n                                id={this.props.post.id}\r\n                                className=\"btn-trash btn-sm btn-outline-success\">\r\n                                <i className=\"fa fa-trash-o\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    DEL, COMP\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    posts: state.posts\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Post)","import React from 'react';\r\nimport Post from './Post';\r\nimport { connect } from 'react-redux'\r\n\r\nconst Posts = ({ myPosts, }) => {\r\n\r\n    if (!myPosts) {\r\n        return <p>Задач нету</p>\r\n    }\r\n    return (\r\n        myPosts.map(post => <Post post={post} key={post.id} />)\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        myPosts: state.posts\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Posts);","import React from 'react';\nimport './App.css'\nimport PostForm from './Component/PostForm';\nimport Posts from './Component/Posts';\n\nfunction App() {\n  const clickHandler = () => {\n    console.log('event')\n  }\n  return (\n    <div className=\"App \">\n      <h2>Мои задачи</h2>\n      <div className=\"col\">\n        <PostForm />\n      </div>\n      <div className=\"col\">\n        <h2>Список задач</h2>\n        <Posts click={clickHandler} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ADD_TODO, COMPLETE_TODO, DELETE_TODO } from './types';\r\n\r\nconst initialState = {\r\n    posts: []\r\n}\r\n\r\nexport const postsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_TODO:\r\n            return { ...state, posts: state.posts.concat([action.text]) }\r\n        case DELETE_TODO:\r\n            const id = action.id\r\n            return {\r\n                ...state, posts: state.posts.filter((posts) => posts.id !== id)\r\n            }\r\n        case COMPLETE_TODO:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(posts =>\r\n                    posts.id === action.id\r\n                        ? { ...posts, check: action.check }\r\n                        : posts)\r\n            }\r\n        default: return state\r\n    }\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { postsReducer } from './redux/postReducer'\n\n// const persistedState = localStorage.getItem('reduxState') ? JSON.parse(localStorage.getItem('reduxState')) : { posts: [] }\nconst store = createStore(postsReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\n// store.subscribe(() => {\n//   localStorage.setItem('reduxState', JSON.stringify(store.getState()))\n// })\nReactDOM.render(\n  app,\n  document.getElementById('root')\n);\n\n\n","export const ADD_TODO = 'ADD_TODO';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const COMPLETE_TODO = 'COMPLETE_TODO';\r\n"],"sourceRoot":""}